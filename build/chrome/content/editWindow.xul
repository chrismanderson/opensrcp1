<?xml version="1.0"?>
<?xml-stylesheet href="style.css" type="text/css"?>
<!-- This document is the edit pane for the album app. -->
<dialog id="editWindow" title="Edit" 
	windowtype="main"
	orient="vertical"
	sizemode="normal"
	onload="init()"
	buttons="accept,cancel,extra1,extra2"
	buttonlabelcancel="Cancel"
	buttonlabelaccept="Save"
	buttonlabelextra1="Add Track"
	buttonlabelextra2="Remove Track"
	ondialogaccept="return doOK();"
	ondialogcancel="return doCancel();"
	ondialogextra1="addTrack('',numOfTracks+1);"
	ondialogextra2="removeTrack(numOfTracks)"
 persist="screenX screenY width height"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<script>
<![CDATA[
	// global variables to store the in/out return objects
	var initialAlbum = window.arguments[0];
	var returnValues = window.arguments[1];
	
	// global variable to store the current number of tracks
	var numOfTracks = 1;
	
	// cancel button which closes the dialog
	function doCancel() {
	}
	
	// when user saves changes, closes window and updates
	// the return parameters to the new values
	function doOK() {
		returnValues = captureValues(returnValues);
		window.close();
	}
	
	// Initializer function that fills in the dialog
	// with windows from the incoming album object.
	function init() {
		
		// sets the ui info
		document.getElementById("albumText").value = initialAlbum.album;
		document.getElementById("artistText").value = initialAlbum.artist;
		document.getElementById("genreText").value = initialAlbum.genre;
		document.getElementById("yearText").value = initialAlbum.year;
		document.getElementById("salesText").value = initialAlbum.sales;
		document.getElementById("ratingText").value = initialAlbum.rating;

		// builds the song list
		// adds default values if the album has no songs
		if (!initialAlbum.songs[0]) {
			document.getElementById("track.1").value = "Track 1";
		}
		
		else {
			document.getElementById("track.1").value = initialAlbum.songs[0];

			for (var i = 1; i < initialAlbum.songs.length; i++) {
				addTrack(initialAlbum.songs[i],i+1);
			}
		}
		returnValues = captureValues(returnValues);	
	}
	
	// adds a new track to the window
	// for now, does not resize the window to fit (couldn't get that to work)
	// takes the track name and rack number as a parameter
	function addTrack(trackName,trackNum) {
		
		// increments the number of tracks, declares objects
		// for the new DOM objects
		numOfTracks++;
		var newTrackBox, newTrackLabel;
		var editPane = document.getElementById("gridRows");
		var row = document.createElement("row");
		
		// clones the first track, sets the label
		newTrackBox = document.getElementById("track.1").cloneNode(true);
		newTrackLabel = document.getElementById("trackLabel.1").cloneNode(true);
		
		// sets the label/id based on the given track number
		newTrackBox.setAttribute('id',"track." + trackNum);
		newTrackBox.value = trackName;
		newTrackLabel.setAttribute('id',"trackLabel." + trackNum);
		newTrackLabel.setAttribute('control',"track." + trackNum);
		newTrackLabel.value = "Track " + trackNum;
		row.appendChild(newTrackLabel);
		row.appendChild(newTrackBox);
		
		// appends the new track to the box
		editPane.appendChild(row);
		
	}
	
	// removes the last track
	function removeTrack(numToRemove) {
		if (numToRemove > 1) {
			document.getElementById("gridRows").removeChild(document.getElementById("gridRows").lastChild); 
			numOfTracks--;
		}	
	}
	
	// gets the list of songs that the user added/
	// changed in the dialog
	function getSongs() {
		var returnSongs = new Array(numOfTracks);
		var editPane = document.getElementById("gridRows");
		
		for (var i = numOfTracks; i > 0; i--) {
			returnSongs[i-1] = document.getElementById('track.' + i).value;
		}
		
		return returnSongs;
	}
		
	// captures the values in the ui
	// returns a new object to pass back to the main app
	function captureValues(dataArray) {

		dataArray.album = document.getElementById('albumText').value;
		dataArray.artist = document.getElementById('artistText').value;
		dataArray.genre = document.getElementById('genreText').value;
		dataArray.year = document.getElementById('yearText').value;
		dataArray.sales = document.getElementById('salesText').value;
		dataArray.rating = document.getElementById('ratingText').value;
		dataArray.songs = getSongs();

		return dataArray;
	}

]]>
</script>
	
	<groupbox>
		<caption label="Songs"/>
		<grid id="editPane">
			<columns>
				<column flex="1"/>
				<column flex="2"/>
			</columns>
			
			<!-- Main textbox grid -->
			<rows id="gridRows">
				<row>
					<label control="albumText" value="Album Name"/>  
					<textbox id="albumText"/>
				</row>	
				
				<row>
					<label control="artistText" value="Artist Name"/>  
					<textbox id="artistText" />
				</row>
				
				<row>	
					<label control="genreText" value="Genre"/>  
					<textbox id="genreText"/>  
				</row>
				
				<!-- Restricts year data -->
				<row>	
					<label control="yearText" value="Year"/>  
					<textbox id="yearText" type="number" min="1800" max="2500" />
				</row>
				
				<!-- Sets up menu to select a sales status -->
				<row>
					<label control="salesText" value="Sales awards"/>  
			        <menulist id="salesText">
			          <menupopup>
			            <menuitem label="None" value="None"/>
			            <menuitem label="Silver" value="Silver"/>
			            <menuitem label="Gold" value="Gold"/>
						<menuitem label="Platinum" value="Platinum"/>
						<menuitem label="Diamond" value="Diamond"/>
			          </menupopup>
			        </menulist>
				</row> 
				
				<!-- Restricts rating -->
				<row>
					<label control="ratingText" value="Rating"/>  
					<textbox type="number" id="ratingText" min="1" max="5"/>
				</row>
				
				<!-- Default track -->
				<row>		
					<label id="trackLabel.1" control="track.1" value="Track 1"/>  
					<textbox id="track.1"/>  
				</row>
				
			</rows>
		</grid>
	</groupbox>
</dialog>